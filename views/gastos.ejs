<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <link rel="stylesheet" href="styles/style.css" />
  <link rel="stylesheet" href="styles/header.css" />
  <link rel="stylesheet" href="styles/clientes.css" />
  <link rel="stylesheet" href="styles/resumen.css?<%= Math.random() %>" />

  <title>Data Books</title>
</head>

<body>
  <%- include('header.ejs') %>
    <%- include('resumen.ejs') %>
      <section class="clients-container">
        <span class="create-client">
          <h1 class="clients-container__title">Gastos</h1>
          <a class="create-client__button" href="./crearGastos">Agregar gastos</a>
        </span>
        <table class="table">
          <thead class="table__head">
            <tr class="">
              <th class="table__head-title">Etiqueta</th>
              <th class="table__head-title">Descripcion</th>
              <th class="table__head-title">Debito</th>
              <th class="table__head-title">medio</th>
              <th class="table__head-title">Fecha</th>
            </tr>
          </thead>
          <tbody></tbody>
        </table>
      </section>
      <script>
        const table = document.querySelector('.table tbody')
        let sortOrder = true
        const data = fetch('/tabla2').then(res => res.json())
        data.then(res => {
          sorted(table, res, '', false, false)
        })
        // refactorizando a una funcion
        // la funcion recibe una tabla HTML, un objeto, una propiedad por la cual
        //  se va a ordenar y un booleano que indica si se ordena

        const sorted = (table, obj, sortBy, sort, will = true) => {
          table.innerHTML = ''
          if (will){
            if (typeof obj[0][sortBy] === "number")
              sort ? obj.sort((a, b) => a[sortBy] - b[sortBy]) : obj.sort((a, b) => b[sortBy] - a[sortBy])
            else
              sort ? obj.sort((a, b) => a[sortBy].localeCompare(b[sortBy])) : obj.sort((a, b) => b[sortBy].localeCompare(a[sortBy]))
          }
          obj.forEach(element => {
            table.innerHTML += `
            <tr class="table__row">
              <td class="table__row-data">
                ${element.nombre}
              </td>
              <td class="table__row-data">
              ${element.descripcion} 
              </td>
              <td class="table__row-data">
                 ${element.debito} 
              </td>
              <td class="table__row-data">
                 ${element.medio}
              </td>
              <td class="table__row-data">
                 ${new Date (element.fecha).toLocaleDateString()}
              </td>
              </tr>`
          })
          sortOrder = !sortOrder
}

const thead = document.querySelectorAll('.table__head-title')
thead[0].addEventListener('click', () => {
  data.then(res => {
    sorted(table, res, 'nombre', sortOrder)
  })
})
thead[1].addEventListener('click', () => {
  data.then(res => {
    sorted(table, res, 'descripcion', sortOrder)
  })
})
thead[2].addEventListener('click', () => { 
  data.then(res => {
    sorted(table, res, 'debito', sortOrder)
  })
})
thead[3].addEventListener('click', () => {
  data.then(res => {
    sorted(table, res, 'medio', sortOrder)
  })
})
thead[4].addEventListener('click', () => {
  data.then(res => {
    sorted(table, res, 'fecha', sortOrder)
  })
})


      </script>
<script src="./javascript/global.js"></script>
</body>
</html>